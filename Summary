// index 를 가져 오는 거를 Objective-C의 NSArray를 통해서
var bookList = [Book]()
let index = (bookList as NSArray).index(of: book)

IB : Interface builder

@IBAction
@IBOutlet

// 반드시 맨 뒤에 '!'를 붙여준다 !! (어짜피 자동으로 되긴함)
@IBOutlet var resultTextView:UITextView!


UITextView : Scrollable, multiline text region.
UITextField
UILabel

App Programming Guide for iOS

기본적인 패턴 3개
1. MVC Pattern
Model View Controller

2. Target Action Pattern
3. Delegate Pattern

Concepts in Objective-C Programming
Foundation
(The Foundation Framework, google)

UIKit




UIImageView:
A UIImageView object displays a single image or a sequence of animated images in your interface.
보통 PNG를 쓰는게 좋다.

@IBOutlet var imgView:UIImageView!

animationImages:
An array of UIImage objects to use for an animation.

init?(named: String)
Returns the image object associated with the specified filename.

let cuteImages = [UIImage(named:"1.jpg")!]

animationDuration:
The amount of time it takes to go through one cycle of the images.
var animationDuration: TimeInterval { get set }

startAnimating():
Starts animating the images in the receiver.


UIButton:
Sets the title to use for the specified state.
setTitle(_:for:)

UISlider
A visual control used to select a single value from a continuous range of values.

yourUILabel.text = String.localizedStringWithFormat("%.2f %@", value, unit)


Protocol : Java의 interface와 같은 것
그러나 required를 붙이지 않으면 optional한 것이다.
-> Delegate를 쓰기 위한 것

@@@@@@@@@@@@@@@@@@@@@@@@@@ Delegate 사용 순서 3개 @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
delegate protocol 추가. func 사용. 연결하기!!

UITextFieldDelegate

becomeFirstResponder():
Showing and Hiding the Keyboard

textFieldShouldReturn(_:)
-> keyboard return on click

    func textFieldShouldReturn(_ textField: UITextField) -> Bool {
        textField.resignFirstResponder() // 인자로 넘어온 부분을 키보드가 내려가게 함
        return true
    }

    override func viewDidLoad() {
        super.viewDidLoad()
        //nameTextField.delegate = self 		// 이것을 반드시 해줘야 한다 !! 아니면 IB에 가서 delegate을 그 View 에 연결
    }

    // 바탕 화면이 눌렸을 때 키보드가 올라가게 함.
    override func touchesBegan(_ touches: Set<UITouch>, with event: UIEvent?) {
    	// self는 view 자기 자신, view 객체의 함수
        self.view.endEditing(true)
    }

UIResponder
Responding to Touch Events

    override func touchesBegan(_ touches: Set<UITouch>, with event: UIEvent?) {
        print("touchesBegan")
    }
    
    override func touchesMoved(_ touches: Set<UITouch>, with event: UIEvent?) {
        print("touchesMoved")
    }
    
    override func touchesEnded(_ touches: Set<UITouch>, with event: UIEvent?) {
        print("touchesEnded")
    }


TextField 에서 키보드 설정해주는 것이 중요!!
Keyboard, clearbutton(textFieldShouldClear), return key, placeholder




















